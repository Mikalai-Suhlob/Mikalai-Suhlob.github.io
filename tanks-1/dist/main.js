(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Game{constructor(t){this.scene=t,this.objects=[],this.runing=!1,this.worldTime=0,this.last=0,this.now=0}add(t){let e=this.objects.indexOf(t);if(-1!==e)return this.objects.push(t);this.objects.splice(e,1),this.objects.push(t)}del(t){let e=this.objects.indexOf(t);-1===e&&(t.drop&&t.drop(),this.objects.splice(e,1))}update(){this.now=(Date.now()-this.last)/1e3;for(let t of this.objects)t.update();this.render(),this.worldTime+=this.now}render(){let{scene:t}=this,{ctx:e}=t;if(e.clearRect(0,0,t.width,t.height),this.runing){for(let t of this.objects)t.render();requestAnimationFrame(this.update.bind(this)),this.last=Date.now()}}stop(){this.runing=!1}start(){this.runing||(this.last=Date.now(),this.runing=!0,this.update())}}exports.default=Game;

},{}],2:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Keyboard{constructor(){this.keys=[],window.addEventListener("keydown",e=>{-1===this.keys.indexOf(e.key)&&this.keys.push(e.key)}),window.addEventListener("keyup",e=>{let s=this.keys.indexOf(e.key);-1!==s&&this.keys.splice(s,1)}),window.addEventListener("blur",()=>{for(;this.keys.length;)this.keys.pop()})}isKey(e){return-1!==this.keys.indexOf(e)}}exports.default=Keyboard;

},{}],3:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tank_1=require("./tank"),vec2_1=require("./vec2"),keyboard_1=require("./keyboard");class Player extends tank_1.default{constructor(t,e,i,a,r,s){super(e,i,a),this.game=t,this.keyboard=new keyboard_1.default,this.position=new vec2_1.default(r,s)}set dir(t){let{position:e}=this;this.dirrection!==t&&(e.x=Math.ceil(5*e.x)/5,e.y=Math.ceil(5*e.y)/5),this.dirrection=t}animate(t){t&&!this.intervalAnim?this.intervalAnim=setInterval(()=>{this.anim=this.anim?0:1},100):!t&&this.intervalAnim&&(clearInterval(this.intervalAnim),delete this.intervalAnim)}update(){let{keyboard:t,position:e,game:i}=this,a=2.5*i.now;t.isKey("ArrowUp")?(this.dir=0,e.add(0,-a),this.animate(!0)):t.isKey("ArrowLeft")?(this.dir=1,e.add(-a,0),this.animate(!0)):t.isKey("ArrowRight")?(this.dir=3,e.add(a,0),this.animate(!0)):t.isKey("ArrowDown")?(this.dir=2,e.add(0,a),this.animate(!0)):this.animate(!1),this.position.range(12,12)&&this.animate(!1)}render(){let{position:t,game:e}=this,{ctx:i}=e.scene;this.texture(i,t.x,t.y)}}exports.default=Player;

},{"./keyboard":2,"./tank":5,"./vec2":7}],4:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Scene{constructor(t,e,i,o={}){this.width=e,this.height=i;let s=document.querySelector(t);if(!(s instanceof HTMLCanvasElement))throw new Error(`No find canvas in "${t}"`);s.width=e,s.height=i,this.ctx=s.getContext("2d"),this.ctx.fillStyle="rgba(255, 255, 255, 0.5)",this.ctx.globalCompositeOperation="lighter",this.ctx.globalAlpha=1,this.ctx.imageSmoothingEnabled=!1;for(let t in o)this.ctx[t]=o[t]}}exports.default=Scene;

},{}],5:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const textures_1=require("./textures"),colors=["ytank","gtank","btank","rtank"];class Tank{constructor(t=0,e=0,r=0){this.color=t,this.dirrection=e,this.type=r,this.anim=0}get texture(){let{color:t,dirrection:e,type:r,anim:s}=this,o=textures_1.default.get(colors[this.color]).sector(16,16,40,40);return(t,i,c)=>{o.draw(t,2*e+s,r,i,c)}}}exports.default=Tank;

},{"./textures":6}],6:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const vec2_1=require("./vec2");exports.TextureList=[];class TextureSectorize{constructor(e,t,r,s,i){this.texture=e,this.x=t,this.y=r,this.mX=s,this.mY=i}draw(e,t,r,s,i){let{x:o,y:u,mX:x,mY:c,texture:a}=this,h=vec2_1.default.create(t,r).multiply(o,u),l=vec2_1.default.create(s,i).multiply(x,c);a.draw(e,h.x,h.y,o,u,l.x,l.y,x,c)}}exports.TextureSectorize=TextureSectorize;class Texture{constructor(e,t=e.src){this.image=e,this.name=t,this.width=e.width,this.height=e.height}sector(e,t=e,r=e,s=t){return new TextureSectorize(this,e,t,r,s)}draw(e,t,r,s,i,o,u,x,c){e.drawImage(this.image,t,r,s,i,o,u,x,c)}}exports.Texture=Texture;class TexturesStore{static load(e,t=e){return new Promise((r,s)=>{let i=new Image;i.src=e,i.onload=(()=>{this.textureList.push(new Texture(i,t)),console.log(`Loaded texture "${e}"`),r()}),i.onerror=(e=>s(e))})}static get(e){for(let t of this.textureList)if(t.name===e)return t;throw new Error(`No loaded texture ${e}`)}}TexturesStore.textureList=[],exports.default=TexturesStore;

},{"./vec2":7}],7:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Vec2{constructor(...t){let e=this.toVector(t);this.x=e.x,this.y=e.y}add(...t){let e=this.toVector(t);return this.x+=e.x,this.y+=e.y,this}multiply(...t){let e=this.toVector(t);return this.x*=e.x,this.y*=e.y,this}range(t,e,r=0,s=0){let{x:i,y:c}=this;return i>t?(this.x=t,"maxX"):i<r?(this.x=r,"minX"):c>e?(this.y=e,"maxY"):c<s?(this.y=s,"minY"):null}clone(){return new Vec2(this)}toVector(...t){let[e,r=e]=t;return e instanceof Vec2?{x:e.x,y:e.y}:Array.isArray(e)?this.toVector(...e):{x:e,y:r}}static create(...t){return new Vec2(t)}}exports.default=Vec2;

},{}],8:[function(require,module,exports){
"use strict";async function load(){await textures_1.default.load("assets/yellow_tanks.png","ytank"),await textures_1.default.load("assets/green_tanks.png","gtank"),await textures_1.default.load("assets/blue_tanks.png","btank"),await textures_1.default.load("assets/red_tanks.png","rtank")}async function main(){const e=new scene_1.default("canvas",520,520),a=new game_1.default(e),t=new player_1.default(a,0,0,0,4,12);a.add(t),a.start()}Object.defineProperty(exports,"__esModule",{value:!0});const scene_1=require("./lib/scene"),textures_1=require("./lib/textures"),game_1=require("./lib/game"),player_1=require("./lib/player");window.addEventListener("load",async()=>{try{await load(),await main()}catch(e){console.error(e)}});

},{"./lib/game":1,"./lib/player":3,"./lib/scene":4,"./lib/textures":6}]},{},[8]);
